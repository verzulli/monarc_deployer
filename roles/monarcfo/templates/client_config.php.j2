<?php
/**
 * Local Configuration Override
 *
 * This configuration override file is for overriding environment-specific and
 * security-sensitive configuration information. Copy this file without the
 * .dist extension at the end and populate values as needed.
 *
 * @NOTE: This file is ignored from Git by default with the .gitignore included
 * in ZendSkeletonApplication. This is a good practice, as it prevents sensitive
 * credentials from accidentally being committed into version control.
 */

 $appdir = getenv('APP_DIR') ? getenv('APP_DIR') : '/var/lib/monarc/fo';
 $string = file_get_contents($appdir . '/package.json');
 if ($string === false) {
     $string = file_get_contents('./package.json');
 }
 $package_json = json_decode($string, true);

return [
    'doctrine' => [
        'connection' => [
            'orm_default' => [
                'params' => [
                    'host' => 'localhost',
                    'user' => '{{ db_user }}',
                    'password' => '{{ db_password }}',
                    'dbname' => 'monarc_common',
                ],
            ],
            'orm_cli' => [
                'params' => [
                    'host' => 'localhost',
                    'user' => '{{ db_user }}',
                    'password' => '{{ db_password }}',
                    'dbname' => 'monarc_cli',
                ],
            ],
        ],
    ],

    'languages' => [
        'en' => [
            'index' => 1,
            'label' => 'English',
        ],
        'fr' => [
            'index' => 2,
            'label' => 'FranÃ§ais',
        ],
        'de' => [
            'index' => 3,
            'label' => 'Deutsch',
        ],
        'nl' => [
            'index' => 4,
            'label' => 'Nederlands',
        ],
    ],

    'defaultLanguageIndex' => 1,

    'activeLanguages' => ['en','fr','de','nl','es','ro','it','pl','pt','ja'],

    'appVersion' => $package_json['version'],

    'checkVersion' => true,
    'appCheckingURL' => 'https://version.monarc.lu/check/MONARC',

    {% if twoFactorAuthEnforced is defined %}
    'twoFactorAuthEnforced' => {{ twoFactorAuthEnforced }},
    {% else %}
    'twoFactorAuthEnforced' => {{ twoFactorAuthEnforced | bool if twoFactorAuthEnforced is defined else "false" | bool }},
    {% endif %}

    'instanceName' => '{{ instance_name}}', // will be used for the label of the 2FA QRCode.

    'email' => [
        'name' => 'MONARC',
        'from' => '{{ emailFrom if emailFrom else "info@monarc.lu" }}',
    ],

    'terms' => '{{ terms if terms is defined else "" }}',

    'monarc' => array(
        'ttl' => 60, // timeout
        'salt' => '{{ salt }}', // private salt for the password
        'cliModel' => 'generic', // model to display for the client, else an ID of model, else 'generic' (empty for all)
    ),

    'mospApiUrl' => 'https://objects.monarc.lu/api/',

    'statsApi' => [
        'baseUrl' => 'http://{{ monarc_statsservice_host }}:{{ monarc_statsservice_port }}/{{ monarc_statsservice_url | urlsplit('path') }}', // stats service running on the back office
        'apiKey' => '{{statsToken}}' // token of the client generated by "add_inventory.py"
    ],

    'publicHost' => 'http://{{ www_vhname }}/',

    {% if isBackgroundProcessActive is defined %}
    'import' => [
        'uploadFolder' => '/var/www/{{www_vhname}}/import/files',
        'isBackgroundProcessActive' => {{ isBackgroundProcessActive }},
    ],
    {% else %}
    'import' => [
        'uploadFolder' => '/var/www/{{www_vhname}}/import/files',
        'isBackgroundProcessActive' => {{ isBackgroundProcessActive | bool if isBackgroundProcessActive is defined else "false" | bool }},
    ],
    {% endif %}
];
